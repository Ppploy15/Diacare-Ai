import React, { useState, useEffect } from 'react';  
import { getAuth, onAuthStateChanged } from 'firebase/auth';
import { getFirestore, collection, query, where, getDocs, orderBy } from 'firebase/firestore';
import './History.css';

const History = () => {
  const [historyData, setHistoryData] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const auth = getAuth();
    const db = getFirestore();
    const userCollection = collection(db, 'predictionHistory');

    const unsubscribe = onAuthStateChanged(auth, async (user) => {
      console.log("Logged in user UID:", user?.uid); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö uid ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏î‡∏∂‡∏á‡∏°‡∏≤

      if (user) {
        console.log('‚úÖ Logged in user:', user.uid);
        const q = query(userCollection, where('uid', '==', user.uid), orderBy('timestamp', 'desc'));

        try {
          const querySnapshot = await getDocs(q);
          console.log('‚úÖ Total documents:', querySnapshot.size);

          const data = querySnapshot.docs.map(doc => {
            const d = doc.data();
            console.log('üìÑ doc data:', d);

            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å formData
            const formData = d.formData || {}; // ‡πÉ‡∏ä‡πâ default ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ formData
            const predictionResult = d.predictionResult; // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ predictionResult

            return {
              date: d.timestamp?.toDate(),
              hypertension: formData.hypertension,
              heartDisease: formData.heartDisease,
              smokingStatus: formData.smokingStatus,
              hbA1c: formData.hbA1c,
              currentBloodSugar: formData.currentBloodSugar,
              predictionResult: predictionResult, // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
            };
          });

          setHistoryData(data);
        } catch (error) {
          console.error('‚ùå Error fetching history:', error);
        } finally {
          setLoading(false);
        }
      } else {
        console.log('‚ö†Ô∏è No user logged in');
        setLoading(false);
      }
    });

    return () => unsubscribe(); // cleanup listener
  }, []);

  const formatDate = (date) => {
    if (!date) return '-';
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    return date.toLocaleDateString('th-TH', options);
  };

  if (loading) {
    return <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>;
  }

  return (
    <div className="history">
      <div className="history-box">
        <h2 className="history-title">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</h2>
        <table className="history-table">
          <thead>
            <tr>
              <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
              <th>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á</th>
              <th>‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à</th>
              <th>‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà</th>
              <th>HbA1c</th>
              <th>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î</th>
              <th>‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</th> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ */}
            </tr>
          </thead>
          <tbody>
            {historyData.length === 0 ? (
              <tr><td colSpan="7">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>
            ) : (
              historyData.map((item, index) => (
                <tr key={index}>
                  <td>{formatDate(item.date)}</td>
                  <td>{item.hypertension ? '‡πÄ‡∏õ‡πá‡∏ô' : '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô'}</td>
                  <td>{item.heartDisease ? '‡πÄ‡∏õ‡πá‡∏ô' : '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô'}</td>
                  <td>{item.smokingStatus}</td>
                  <td>{item.hbA1c}</td>
                  <td>{item.currentBloodSugar}</td>
                  <td>{item.predictionResult === 1 ? '‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™' : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™'}</td> {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ */}
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default History;
